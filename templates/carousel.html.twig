<div id="productBookshelf" class="container">
    <div class="row product-grid">
        <!-- Products will be dynamically inserted here in two rows -->
    </div>
    <div class="pagination-controls mt-4">
        <nav aria-label="Product navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item">
                    <button class="page-link" id="prevPage">Previous</button>
                </li>
                <li class="page-item">
                    <button class="page-link" id="nextPage">Next</button>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Keep your existing modal code -->
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productModalLabel" aria-hidden="true">
    <!-- Your existing modal content -->
</div>

<style>
    .product-card {
        border: 1px solid #ddd;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 8px;
        transition: transform 0.2s;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .product-image {
        width: 100%;
        height: 200px;
        object-fit: contain;
        margin-bottom: 15px;
    }

    .product-stock {
        color: #28a745;
    }

    .product-price {
        font-weight: bold;
        font-size: 1.2em;
        color: #007bff;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const productGrid = document.querySelector('.product-grid');
        const prevPageBtn = document.getElementById('prevPage');
        const nextPageBtn = document.getElementById('nextPage');

        let currentPage = 1;
        const limit = 10; // Shows 10 products (5 in each row)

        function loadProducts(page) {
            fetch(`/api/products?page=${page}&limit=${limit}`)
                .then(response => response.json())
                .then(data => {
                    currentPage = data.currentPage;
                    updatePaginationButtons(data.currentPage, data.totalPages);
                    displayProducts(data.products);
                });
        }

        function displayProducts(products) {
            productGrid.innerHTML = '';

            products.forEach(product => {
                const productCard = document.createElement('div');
                productCard.classList.add('col-md-6', 'col-lg-3', 'mb-4');

                const languageCode = document.documentElement.lang || 'en';
                const productTitle = product[`title_${languageCode}`] || product.title_en;

                productCard.innerHTML = `
                <div class="product-card">
                    <img src="${product.image || '{{ asset("images/product.jpeg") }}'}"
                         alt="${productTitle}"
                         class="product-image">
                    <h5 class="product-title">${productTitle}</h5>
                    <p class="product-stock">In Stock: ${product.stock}</p>
                    <p class="product-price">${product.oxprice}</p>
                    <button class="btn btn-primary btn-block view-details"
                            data-product-id="${product.id}">
                        More Details
                    </button>
                </div>
            `;
                productGrid.appendChild(productCard);
            });
        }

        function updatePaginationButtons(currentPage, totalPages) {
            prevPageBtn.disabled = currentPage <= 1;
            nextPageBtn.disabled = currentPage >= totalPages;
        }

        // Event Listeners
        prevPageBtn.addEventListener('click', () => {
            if (currentPage > 1) {
                loadProducts(currentPage - 1);
            }
        });

        nextPageBtn.addEventListener('click', () => {
            loadProducts(currentPage + 1);
        });

        productGrid.addEventListener('click', (e) => {
            if (e.target.classList.contains('view-details')) {
                const productId = e.target.dataset.productId;
                showProductDetails(productId);
            }
        });

        function showProductDetails(productId) {
            fetch(`/api/products/${productId}`)
                .then(response => response.json())
                .then(data => {
                    const modal = document.getElementById('productModal');
                    const modalTitle = modal.querySelector('.modal-title');
                    const modalBody = modal.querySelector('.modal-body');

                    const languageCode = document.documentElement.lang || 'en';
                    const productTitle = data[`title_${languageCode}`] || data.title_en;

                    modalTitle.textContent = productTitle;
                    modalBody.innerHTML = `
                    <div class="row">
                        <div class="col-md-6">
                            <img src="${data.image || '{{ asset("images/product.jpeg") }}'}"
                                 class="img-fluid" alt="${productTitle}">
                        </div>
                        <div class="col-md-6">
                            <p><strong>Item:</strong> ${data.item}</p>
                            <p><strong>Price:</strong> ${data.oxprice}</p>
                            <p><strong>Stock:</strong> ${data.stock}</p>
                            <p><strong>Dimensions:</strong> ${data.length}x${data.width}x${data.height}</p>
                            <p><strong>Weight:</strong> ${data.weight}</p>
                            ${data.features_json ? `<p><strong>Features:</strong> ${data.features_json}</p>` : ''}
                        </div>
                    </div>
                `;

                    $(modal).modal('show');
                });
        }

        // Initial load
        loadProducts(currentPage);
    });
</script>
