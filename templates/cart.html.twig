<div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cartModalLabel">{{ 'cart.your_cart'|trans }}</h5>
                <button type="button" class="btn-close2" data-bs-dismiss="modal" aria-label="Close" style="border: 0;">&times;</button>
            </div>
            <div class="modal-body">
                <div id="cartContent">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                            <tr>
                                <th>{{ 'cart.product'|trans }}</th>
                                <th>{{ 'cart.price'|trans }}</th>
                                <th>{{ 'cart.quantity'|trans }}</th>
                                <th>{{ 'cart.total'|trans }}</th>
                                <th></th>
                            </tr>
                            </thead>
                            <tbody id="cartItems">
                            <!-- Cart items will be dynamically inserted here -->
                            </tbody>
                        </table>
                    </div>
                    <div class="d-flex justify-content-end">
                        <h4>{{ 'cart.total'|trans }}: <span id="cartTotal">0.00</span> €</h4>
                    </div>
                </div>
                <div id="emptyCartMessage" class="text-center p-4" style="display: none;">
                    <p>{{ 'cart.empty'|trans }}</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="proceedToCheckout">{{ 'cart.checkout'|trans }}</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const cartModal = new bootstrap.Modal(document.getElementById('cartModal'));
        const cartBadge = document.createElement('span');
        cartBadge.className = 'position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger';
        document.querySelector('#cart .nav-link').appendChild(cartBadge);

        function updateCart() {
            const token = sessionStorage.getItem('jwt');
            if (!token) return;

            fetch('/api/cart',{
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
                .then(response => response.json())
                .then(data => {
                    updateCartBadge(data.items_count);
                    updateCartModal(data);
                })
                .catch(error => console.error('Error fetching cart:', error));
        }

        function updateCartBadge(count) {
            cartBadge.textContent = count;
            cartBadge.style.display = count > 0 ? 'block' : 'none';
        }

        function updateCartModal(cartData) {
            const cartItems = document.getElementById('cartItems');
            const emptyCartMessage = document.getElementById('emptyCartMessage');
            const cartContent = document.getElementById('cartContent');
            const cartTotal = document.getElementById('cartTotal');

            if (cartData.items.length === 0) {
                emptyCartMessage.style.display = 'block';
                cartContent.style.display = 'none';
                return;
            }

            emptyCartMessage.style.display = 'none';
            cartContent.style.display = 'block';
            cartItems.innerHTML = '';

            cartData.items.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <div class="d-flex align-items-center">
                            <img src="${item.image}" alt="${item.title}" style="width: 50px; height: 50px; object-fit: cover" class="me-2">
                            <span>${item.title}</span>
                        </div>
                    </td>
                    <td>${item.price.toFixed(2)} €</td>
                    <td>
                        <div class="input-group" style="width: 120px">
                            <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity('${item.id}', ${item.quantity - 1})">-</button>
                            <input type="number" class="form-control form-control-sm text-center" value="${item.quantity}"
                                   onchange="updateQuantity('${item.id}', this.value)" min="0">
                            <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity('${item.id}', ${item.quantity + 1})">+</button>
                        </div>
                    </td>
                    <td>${item.amount.toFixed(2)} €</td>
                    <td>
                        <button class="btn btn-danger btn-sm" onclick="updateQuantity('${item.id}', 0)">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                `;
                cartItems.appendChild(row);
            });

            cartTotal.textContent = cartData.total_amount.toFixed(2);
        }

        window.updateQuantity = function(productId, quantity) {
            const token = sessionStorage.getItem('jwt');
            if (!token) return;
            fetch('/api/cart/update', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({
                    product_id: productId,
                    quantity: parseInt(quantity)
                })
            })
                .then(response => response.json())
                .then(() => updateCart())
                .catch(error => console.error('Error updating cart:', error));
        };

        document.querySelector('#cart .nav-link').addEventListener('click', function(e) {
            e.preventDefault();
            updateCart();
            cartModal.show();
        });

        document.getElementById('proceedToCheckout').addEventListener('click', function() {
            window.location.href = '/checkout';
        });

        // Manual close button handler
        document.querySelector('.btn-close2').addEventListener('click', () => {
            if (cartModal) {
                cartModal.hide();
            }
        });

        // Initial cart load
        updateCart();
    });
</script>
